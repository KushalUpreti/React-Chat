[{"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\index.js":"1","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\App.js":"2","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\reportWebVitals.js":"3","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\contexts\\socket-context.js":"4","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\hooks\\http-hook.js":"5","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\contexts\\auth-context.js":"6","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\hooks\\Auth-hook.js":"7","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Signup.js":"8","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Login.js":"9","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Dashboard.js":"10","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Header.js":"11","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\AllConversations.js":"12","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UserInfo.js":"13","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Container.js":"14","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\MidDiv.js":"15","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\EdgeContainer.js":"16","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SearchBar.js":"17","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SendMessage.js":"18","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Avatar.js":"19","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\MessageHeader.js":"20","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\CoversationHolder.js":"21","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Message.js":"22","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\ConversationCard.js":"23","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\RightDiv.js":"24","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\LeftDiv.js":"25","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Actions.js":"26","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\ActiveFriends.js":"27","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Suggested.js":"28","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UI\\Modal.js":"29","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UI\\Backdrop.js":"30","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\store.js":"31","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\Reducers\\conversationSlice.js":"32","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SearchContainer.js":"33","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\AddFriend.js":"34","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\sharedFunctions\\sharedFunctions.js":"35","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\Reducers\\activeUsersSlice.js":"36"},{"size":623,"mtime":1613110191786,"results":"37","hashOfConfig":"38"},{"size":1278,"mtime":1613387028278,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":820,"mtime":1613400042048,"results":"41","hashOfConfig":"38"},{"size":1203,"mtime":1612350114376,"results":"42","hashOfConfig":"38"},{"size":242,"mtime":1611918953945,"results":"43","hashOfConfig":"38"},{"size":1396,"mtime":1613386523350,"results":"44","hashOfConfig":"38"},{"size":3847,"mtime":1613398569567,"results":"45","hashOfConfig":"38"},{"size":2372,"mtime":1613398569583,"results":"46","hashOfConfig":"38"},{"size":604,"mtime":1613288815682,"results":"47","hashOfConfig":"38"},{"size":546,"mtime":1613404521326,"results":"48","hashOfConfig":"38"},{"size":3080,"mtime":1613398569505,"results":"49","hashOfConfig":"38"},{"size":394,"mtime":1612176553904,"results":"50","hashOfConfig":"38"},{"size":190,"mtime":1612172391680,"results":"51","hashOfConfig":"38"},{"size":3621,"mtime":1613398569394,"results":"52","hashOfConfig":"38"},{"size":233,"mtime":1612174723862,"results":"53","hashOfConfig":"38"},{"size":276,"mtime":1613208381162,"results":"54","hashOfConfig":"38"},{"size":518,"mtime":1612607620711,"results":"55","hashOfConfig":"38"},{"size":274,"mtime":1612537044527,"results":"56","hashOfConfig":"38"},{"size":545,"mtime":1612599618358,"results":"57","hashOfConfig":"38"},{"size":1475,"mtime":1613391451131,"results":"58","hashOfConfig":"38"},{"size":196,"mtime":1613391291508,"results":"59","hashOfConfig":"38"},{"size":1011,"mtime":1613125399998,"results":"60","hashOfConfig":"38"},{"size":3317,"mtime":1613411155296,"results":"61","hashOfConfig":"38"},{"size":3463,"mtime":1613398646804,"results":"62","hashOfConfig":"38"},{"size":299,"mtime":1613217881514,"results":"63","hashOfConfig":"38"},{"size":626,"mtime":1613408538948,"results":"64","hashOfConfig":"38"},{"size":518,"mtime":1613396947914,"results":"65","hashOfConfig":"38"},{"size":653,"mtime":1613037389431,"results":"66","hashOfConfig":"38"},{"size":310,"mtime":1613033598379,"results":"67","hashOfConfig":"38"},{"size":327,"mtime":1613407940181,"results":"68","hashOfConfig":"38"},{"size":1408,"mtime":1613119726417,"results":"69","hashOfConfig":"38"},{"size":466,"mtime":1613220745080,"results":"70","hashOfConfig":"38"},{"size":602,"mtime":1613220700848,"results":"71","hashOfConfig":"38"},{"size":456,"mtime":1613390846240,"results":"72","hashOfConfig":"38"},{"size":1141,"mtime":1613411002776,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"18y22i",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\index.js",[],["150","151"],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\App.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\reportWebVitals.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\contexts\\socket-context.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\hooks\\http-hook.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\contexts\\auth-context.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\hooks\\Auth-hook.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Signup.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Login.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\pages\\Dashboard.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Header.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\AllConversations.js",["152","153"],"import { useEffect } from 'react';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useSocketObject } from '../contexts/socket-context';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadConversation, updateConversation, selectConvo } from '../Store/Reducers/conversationSlice';\r\nimport { getMessageDate } from '../sharedFunctions/sharedFunctions';\r\n\r\nimport ConversationCard from './ConversationCard';\r\n\r\nfunction AllConvesations(props) {\r\n    const conversationRedux = useSelector(selectConvo);\r\n    const dispatch = useDispatch();\r\n\r\n    const { sendRequest } = useHttpClient();\r\n\r\n    const socket = useSocketObject();\r\n\r\n    useEffect(() => {\r\n        if (socket !== undefined) {\r\n            socket.on('receive-message', (incoming) => {\r\n                dispatch(updateConversation(incoming));\r\n            })\r\n        }\r\n\r\n    }, [socket])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchConversation();\r\n    }, [])\r\n\r\n    async function fetchConversation() {\r\n\r\n        const conversations = await sendRequest(`http://localhost:8080/user/getAllConversations/${props.userId}`, \"GET\", null, null);\r\n        dispatch(loadConversation(conversations.data));\r\n    }\r\n\r\n    function prepareData(item) {\r\n        let conversationId = item._id;\r\n        let conversationName = item.conversation_name;\r\n        conversationName = conversationName.replace(props.username, \"\");\r\n        let recipient = conversationName;\r\n        conversationName = conversationName.trim();\r\n        conversationName = conversationName.slice(0, conversationName.indexOf(\" \"));\r\n        if (conversationName.length >= 14) {\r\n            conversationName = conversationName.slice(0, 12) + \"..\";\r\n        }\r\n\r\n        let time = getMessageDate(item.latest_message_date)\r\n        const initials = conversationName.charAt(0);\r\n        const values = [];\r\n\r\n        item.users.forEach(element => {\r\n            values.push(...Object.values(element));\r\n\r\n        });\r\n\r\n        const path = values.filter((item) => {\r\n            return item !== props.userId;\r\n        }).pop();\r\n\r\n        let latest_message = item.latest_message;\r\n        if (latest_message === null) {\r\n            latest_message = \"Say hi to your new friend\";\r\n        }\r\n\r\n        return { conversationName, time, initials, path, recipient, conversationId, values, latest_message };\r\n    }\r\n\r\n    let counter = 0;\r\n    return <div style={{ overflowY: \"scroll\", height: \"70%\" }}>\r\n        {conversationRedux.length > 0 ? conversationRedux.map((item) => {\r\n            const { conversationName, initials, time, path, recipient, conversationId, values, latest_message } = prepareData(item)\r\n            return <ConversationCard key={item.date_created + \" \" + ++counter} initials={initials} recipient={conversationName}\r\n                time={time} username={recipient} recipientId={path} convId={conversationId} recipients={values} latest_message={latest_message} />\r\n        }) : <p style={{ marginTop: \"60%\", padding: \"15px\" }}>No conversation made yet!!</p>}\r\n    </div>\r\n}\r\n\r\nexport default AllConvesations;","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UserInfo.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Container.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\MidDiv.js",["154","155"],"import './MidDiv.css';\r\nimport { useEffect, useState, useContext, useCallback, useRef } from 'react';\r\nimport { updateConversation } from '../Store/Reducers/conversationSlice';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useSocketObject } from '../contexts/socket-context';\r\nimport { useDispatch } from 'react-redux';\r\nimport AuthContext from '../contexts/auth-context';\r\n\r\nimport MessageHeader from './MessageHeader';\r\nimport ConversationHolder from './CoversationHolder';\r\nimport SendMessage from './SendMessage';\r\n\r\nfunction MidDiv() {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const ref = useRef();\r\n    const history = useHistory();\r\n    const socket = useSocketObject();\r\n    const auth = useContext(AuthContext);\r\n    const dispatch = useDispatch();\r\n    const { sendRequest } = useHttpClient();\r\n\r\n    const recipient = location.userData.name;\r\n    const recipients = location.userData.recipients;\r\n    const conversationId = location.userData.conversationId;\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('receive-message', (incoming) => {\r\n            if (incoming.message.conversation_id !== ref.current) {\r\n                return;\r\n            }\r\n\r\n            setMessages((prevState) => {\r\n                let array = [];\r\n                if (Object.keys(prevState).length !== 0) {\r\n                    array = [...prevState];\r\n                }\r\n\r\n                array.push(incoming.message);\r\n                return array;\r\n            })\r\n        });\r\n    }, [socket])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!recipient) {\r\n            history.push(\"/\");\r\n        }\r\n        ref.current = conversationId;\r\n        getMessages(conversationId);\r\n    }, [location.userData])\r\n\r\n    async function getMessages(conversationId) {\r\n\r\n        const ans = await sendRequest(`http://localhost:8080/user/allMessages/${conversationId}`, \"GET\", null, null);\r\n        setMessages(ans.data);\r\n    }\r\n\r\n    const sendMessage = useCallback((e, message) => {\r\n        e.preventDefault();\r\n\r\n        if (message.length === 0) { return; }\r\n        let messageObject = {\r\n            conversation_id: conversationId,\r\n            message,\r\n            sent_by: auth.userId,\r\n            sent_date: new Date()\r\n        }\r\n        socket.emit('send-message', { recipients, messageObject });\r\n\r\n        setMessages((prevState) => {\r\n            let array = [];\r\n            if (Object.keys(prevState).length !== 0) {\r\n                array = [...prevState];\r\n            }\r\n            array.push(messageObject);\r\n            return array;\r\n        })\r\n\r\n        dispatch(updateConversation({ message: messageObject }));\r\n\r\n        const payload = {\r\n            message,\r\n            conversation_id: ref.current,\r\n            sent_by: auth.userId\r\n        }\r\n\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        sendRequest(\"http://localhost:8080/user/addMessage\", \"POST\", payload, config);\r\n\r\n        const elem = document.querySelector('.dummy');\r\n        elem.scrollIntoView({ behavior: 'smooth' });\r\n\r\n    }, [socket]);\r\n\r\n\r\n    return <div className=\"midDiv\">\r\n        <MessageHeader username={recipient} initials={location.userData.initials} />\r\n        <div className=\"conversation\">\r\n            <ConversationHolder messages={messages} />\r\n            <SendMessage send={sendMessage} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MidDiv;","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\EdgeContainer.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SearchBar.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SendMessage.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Avatar.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\MessageHeader.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\CoversationHolder.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Message.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\ConversationCard.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\RightDiv.js",["156"],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\LeftDiv.js",["157"],"import { useContext, useState, useEffect, useCallback } from 'react';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewConversation } from '../Store/Reducers/conversationSlice';\r\nimport EdgeContainer from './EdgeContainer';\r\nimport UserInfo from './UserInfo';\r\nimport SearchBar from './SearchBar';\r\nimport SearchContainer from './SearchContainer';\r\nimport AllConversations from './AllConversations';\r\nimport AuthContext from '../contexts/auth-context';\r\n\r\nfunction LeftDiv() {\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest } = useHttpClient();\r\n    const dispatch = useDispatch();\r\n\r\n    const [query, setQuery] = useState({\r\n        text: \"\",\r\n        searching: false\r\n    })\r\n\r\n    const [searchResult, setSearchResult] = useState([]);\r\n\r\n    const username = auth.username;\r\n    const userId = auth.userId;\r\n\r\n    const downloadSearchData = useCallback(async (text) => {\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + auth.token,\r\n            }\r\n        }\r\n        const result = await sendRequest(`http://localhost:8080/user/searchUsers/${text}`, \"GET\", null, config);\r\n        const newArray = result.data.filter((item) => {\r\n            return item._id !== auth.userId;\r\n        })\r\n        setSearchResult(newArray);\r\n\r\n    }, [sendRequest])\r\n\r\n    useEffect(() => {\r\n        if (query.text.length === 0) { return }\r\n        downloadSearchData(query.text);\r\n    }, [query, downloadSearchData])\r\n\r\n\r\n\r\n    const searchHandler = (query) => {\r\n        if (query.target.value.length === 0) {\r\n            setQuery({\r\n                text: \"\",\r\n                searching: false\r\n            })\r\n            return;\r\n        }\r\n\r\n        setQuery({\r\n            text: query.target.value,\r\n            searching: true\r\n        })\r\n    }\r\n\r\n    const addFriendHandler = async (friendId) => {\r\n        if (friendId === userId) {\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            id: userId,\r\n            friendId,\r\n            action: true\r\n        }\r\n        let config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        }\r\n\r\n        const newConversation = await sendRequest(\"http://localhost:8080/user/addOrRemoveFriend\", \"POST\", payload, config);\r\n        if (!newConversation) { return; }\r\n        dispatch(addNewConversation(newConversation.data));\r\n\r\n        setSearchResult(prevState => {\r\n            const array = [...prevState];\r\n            const newArray = array.filter((item) => {\r\n                return item._id !== friendId;\r\n            })\r\n            return newArray;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <EdgeContainer margin=\"12px 5px 12px 0\">\r\n            <UserInfo username={username} userId={userId} />\r\n            <div>\r\n                <SearchBar text={query.text} handler={searchHandler} />\r\n                {query.searching ? <SearchContainer searches={searchResult} addFriend={addFriendHandler} /> : null}\r\n            </div>\r\n\r\n            <h2 style={{\r\n                margin: \"15px 10px 5px 10px\",\r\n                padding: \"10px\",\r\n                fontFamily: \"'Merriweather Sans', sans-serif\"\r\n            }}>Chats</h2>\r\n\r\n            <AllConversations username={username} userId={userId} />\r\n\r\n        </EdgeContainer>\r\n    )\r\n}\r\n\r\nexport default LeftDiv;","D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Actions.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\ActiveFriends.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\Suggested.js",["158"],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UI\\Modal.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\UI\\Backdrop.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\store.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\Reducers\\conversationSlice.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\SearchContainer.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\components\\AddFriend.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\sharedFunctions\\sharedFunctions.js",[],"D:\\Bsc\\L5\\Web\\0. ReactApp\\chatapp\\1. Frontend\\chat\\src\\Store\\Reducers\\activeUsersSlice.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":25,"column":8,"nodeType":"165","endLine":25,"endColumn":16,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":30,"column":8,"nodeType":"165","endLine":30,"endColumn":10,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":55,"column":8,"nodeType":"165","endLine":55,"endColumn":27,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"171","line":104,"column":8,"nodeType":"165","endLine":104,"endColumn":16,"suggestions":"172"},{"ruleId":"163","severity":1,"message":"173","line":42,"column":8,"nodeType":"165","endLine":42,"endColumn":10,"suggestions":"174"},{"ruleId":"163","severity":1,"message":"175","line":39,"column":8,"nodeType":"165","endLine":39,"endColumn":21,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":14},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'fetchConversation'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'conversationId', 'getMessages', 'history', and 'recipient'. Either include them or remove the dependency array.",["185"],"React Hook useCallback has missing dependencies: 'auth.token', 'auth.userId', 'conversationId', 'dispatch', 'recipients', and 'sendRequest'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'auth.userId', 'dispatch', 'sendRequest', and 'socket'. Either include them or remove the dependency array.",["187"],"React Hook useCallback has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.",["188"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [dispatch, socket]",{"range":"201","text":"202"},"Update the dependencies array to be: [fetchConversation]",{"range":"203","text":"204"},"Update the dependencies array to be: [conversationId, getMessages, history, location.userData, recipient]",{"range":"205","text":"206"},"Update the dependencies array to be: [auth.token, auth.userId, conversationId, dispatch, recipients, sendRequest, socket]",{"range":"207","text":"208"},"Update the dependencies array to be: [auth.userId, dispatch, sendRequest, socket]",{"range":"209","text":"210"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest]",{"range":"211","text":"212"},[872,880],"[dispatch, socket]",[947,949],"[fetchConversation]",[1801,1820],"[conversationId, getMessages, history, location.userData, recipient]",[3307,3315],"[auth.token, auth.userId, conversationId, dispatch, recipients, sendRequest, socket]",[1667,1669],"[auth.userId, dispatch, sendRequest, socket]",[1366,1379],"[auth.token, auth.userId, sendRequest]"]